# name: Deploy

# on:
#   push:
#     branches:
#       - master

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Setup Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Login to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v3
#         with:
#           context: .
#           push: true
#           tags: futug116/interval-backend:latest

#       - name: Create SSH key file
#         run: |
#           echo "${{ secrets.EC2_KEY }}" > ~/key.pem
#           chmod 600 ~/key.pem

#       - name: Test SSH connection
#         run: ssh -i ~/key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "echo 'Connection successful'"

#       - name: SSH to EC2 and deploy
#         uses: appleboy/scp-action@v0.1.0
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key_path: 'key.pem'
#           source: 'docker-compose.yml'
#           target: '/home/ubuntu/interval-backend'
#           debug: true

name: Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: futug116/interval-backend:latest

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Test SSH connection
        run: ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "echo 'Connection successful'"

      - name: Copy files to EC2 using scp
        run: scp -o StrictHostKeyChecking=no docker-compose.yml ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/interval-backend/

      - name: Run deployment commands on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            # Ensure Docker is running
            sudo systemctl start docker
            
            # Add user to docker group (if not already done)
            sudo usermod -aG docker ubuntu
            
            # Run Docker commands
            sudo docker-compose down
            sudo docker-compose up -d --build
          EOF
